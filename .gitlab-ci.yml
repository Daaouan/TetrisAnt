stages:
  - build
  - test
  - docs
  - dist
  - deploy

build:
  stage: build
  script:
    - echo "Building the project with Ant..."
    - ant compile
  only:
    - main
    - develop
  tags:
    - my_custom_runner
  artifacts:
    paths:
      - output/
    expire_in: 1 week

test:
  stage: test
  script:
    - echo "Running tests with Ant..."
    - ant test
  only:
    - main
    - develop
  tags:
    - global_slave
  dependencies:
    - build  # Retrieve artifacts generated by the build job

javadoc:
  stage: docs
  script:
    - echo "Generating Javadoc with Ant..."
    - ant javadoc
  only:
    - main
    - develop
  tags:
    - global_slave
  dependencies:
    - build  # Ensure we use compiled classes from the build stage
  artifacts:
    paths:
      - javadoc/
    expire_in: 1 week

dist:
  stage: dist
  script:
    - echo "Packaging the project into a JAR file with Ant..."
    - ant dist
  only:
    - main
    - develop
  tags:
    - global_slave
  dependencies:
    - build  # Use artifacts generated from the build job
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

deploy:
  stage: deploy
  script:
    - echo "Deploying the project..."
    # Add your deployment commands here (e.g., scp, rsync, or other deployment tools)
    - scp dist/Tetris.jar user@your-server:/path/to/deployment/folder
  only:
    - main  # Deploy only when changes are merged into the main branch
  tags:
    - global_slave
  dependencies:
    - dist  # Use the JAR file created in the dist stage
  environment:
    name: production
    url: http://your-production-url
  when: manual  # Optional: Set this to 'manual' if you want to trigger deployments manually
